// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.98.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace ThreatsManager.Mitre.Stix
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.IO;
using System.Text;
using System.Collections.Generic;

[DebuggerStepThrough]
[Newtonsoft.Json.JsonObjectAttribute("RootSchemabundleObjectsKill_chain_phases", MemberSerialization=MemberSerialization.OptIn)]
public partial class RootSchemabundleObjectsKill_chain_phases
{
    #region Private fields
    private string _kill_chain_name;
    private string _phase_name;
    #endregion
    
    [Newtonsoft.Json.JsonPropertyAttribute()]
    public string kill_chain_name
    {
        get
        {
            return _kill_chain_name;
        }
        set
        {
            _kill_chain_name = value;
        }
    }
    
    [Newtonsoft.Json.JsonPropertyAttribute()]
    public string phase_name
    {
        get
        {
            return _phase_name;
        }
        set
        {
            _phase_name = value;
        }
    }
    
    #region Serialize/Deserialize
    /// <summary>
    /// Serializes current RootSchemabundleObjectsKill_chain_phases object into an json string
    /// </summary>
    public virtual string Serialize()
    {
        Newtonsoft.Json.JsonSerializerSettings settings = new Newtonsoft.Json.JsonSerializerSettings();
        return JsonConvert.SerializeObject(this, settings);
    }
    
    /// <summary>
    /// Deserializes RootSchemabundleObjectsKill_chain_phases object
    /// </summary>
    /// <param name="input">string workflow markup to deserialize</param>
    /// <param name="obj">Output RootSchemabundleObjectsKill_chain_phases object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
    public static bool Deserialize(string input, out RootSchemabundleObjectsKill_chain_phases obj, out Exception exception)
    {
        exception = null;
        obj = default(RootSchemabundleObjectsKill_chain_phases);
        try
        {
            obj = Deserialize(input);
            return true;
        }
        catch (Exception ex)
        {
            exception = ex;
            return false;
        }
    }
    
    public static bool Deserialize(string input, out RootSchemabundleObjectsKill_chain_phases obj)
    {
        Exception exception = null;
        return Deserialize(input, out obj, out exception);
    }
    
    public static RootSchemabundleObjectsKill_chain_phases Deserialize(string input)
    {
        Newtonsoft.Json.JsonSerializerSettings settings = new Newtonsoft.Json.JsonSerializerSettings();
        return JsonConvert.DeserializeObject<RootSchemabundleObjectsKill_chain_phases>(input, settings);
    }
    #endregion
    
    public virtual void SaveToFile(string fileName)
    {
        StreamWriter streamWriter = null;
        try
        {
            string dataString = Serialize();
            FileInfo outputFile = new FileInfo(fileName);
            streamWriter = outputFile.CreateText();
            streamWriter.WriteLine(dataString);
            streamWriter.Close();
        }
        finally
        {
            if ((streamWriter != null))
            {
                streamWriter.Dispose();
            }
        }
    }
    
    public static RootSchemabundleObjectsKill_chain_phases LoadFromFile(string fileName)
    {
        FileStream file = null;
        StreamReader sr = null;
        try
        {
            file = new FileStream(fileName, FileMode.Open, FileAccess.Read);
            sr = new StreamReader(file);
            string dataString = sr.ReadToEnd();
            sr.Close();
            file.Close();
            return Deserialize(dataString);
        }
        finally
        {
            if ((file != null))
            {
                file.Dispose();
            }
            if ((sr != null))
            {
                sr.Dispose();
            }
        }
    }
}
}
#pragma warning restore
