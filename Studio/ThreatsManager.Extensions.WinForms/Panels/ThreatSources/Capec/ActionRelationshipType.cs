// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.2.0.44
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Xml.Serialization;

#pragma warning disable
namespace ThreatsManager.Extensions.Panels.ThreatSources.Capec
{
    /// <summary>
/// The ActionRelationshipType characterizes a relationship between a specified cyber observable action and another cyber observable action.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
[Serializable]
[DebuggerStepThrough]
[DesignerCategory("code")]
[XmlType(Namespace="http://cybox.mitre.org/cybox-2")]
public partial class ActionRelationshipType
{
    #region Private fields
    private ControlledVocabularyStringType _type;
    private List<ActionReferenceType> _action_Reference;
    #endregion
    
    /// <summary>
    /// ActionRelationshipType class constructor
    /// </summary>
    public ActionRelationshipType()
    {
        _action_Reference = new List<ActionReferenceType>();
        _type = new ControlledVocabularyStringType();
    }
    
    /// <summary>
    /// The Type field utilizes a standardized controlled vocabulary to describe the nature of the relationship between this Action and the related Action.
    /// </summary>
    /// <summary>
    /// This field is implemented through the xsi:type controlled vocabulary extension mechanism. The default vocabulary type is ActionRelationshipTypeVocab in the http://cybox.mitre.org/default_vocabularies-2 namespace. This type is defined in the cybox_default_vocabularies.xsd file or at the URL http://cybox.mitre.org/XMLSchema/default_vocabularies/2.0.1/cybox_default_vocabularies.xsd.
    /// </summary>
    /// <summary>
    /// Users may also define their own vocabulary using the type extension mechanism (by specifying a vocabulary name and/or reference using the vocab_name and vocab_reference attributes, respectively) or simply use this as a string field.
    /// </summary>
    public ControlledVocabularyStringType Type
    {
        get => _type;
        set => _type = value;
    }
    
    /// <summary>
    /// The Action_Reference construct captures references to other Actions.
    /// </summary>
    [XmlElement("Action_Reference")]
    public List<ActionReferenceType> Action_Reference
    {
        get => _action_Reference;
        set => _action_Reference = value;
    }
}
}
#pragma warning restore
