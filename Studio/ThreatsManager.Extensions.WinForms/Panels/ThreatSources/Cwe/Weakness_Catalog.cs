// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.2.0.44
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Xml.Serialization;

#pragma warning disable
namespace ThreatsManager.Extensions.Panels.ThreatSources.Cwe
{
    /// <summary>
/// The Weakness_Catalog structure represents a collection of software
/// security issues (flaws, faults, bugs, vulnerabilities, weaknesses, etc). The name
/// used by CWE is usually "CWE". However, if this collection is a subset of CWE, then a
/// more appropriate name should be used. It has two required attributes: Catalog_Name
/// and Catalog_Version.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
[Serializable]
[DebuggerStepThrough]
[DesignerCategory("code")]
[XmlType(AnonymousType=true)]
[XmlRoot(Namespace="", IsNullable=false)]
public partial class Weakness_Catalog
{
    #region Private fields
    private List<View> _views;
    private List<Category> _categories;
    private List<Weakness> _weaknesses;
    private List<Compound_Element> _compound_Elements;
    private string _catalog_Name;
    private string _catalog_Version;
    private DateTime _catalog_Date;
    #endregion
    
    /// <summary>
    /// Weakness_Catalog class constructor
    /// </summary>
    public Weakness_Catalog()
    {
        _compound_Elements = new List<Compound_Element>();
        _weaknesses = new List<Weakness>();
        _categories = new List<Category>();
        _views = new List<View>();
    }
    
    /// <summary>
    /// The Views structure contains zero or more View elements.
    /// Each View element represents a perspective with which one might look at
    /// the weaknesses in CWE. CWE-699 Development View and CWE-1000 Research
    /// View are two examples of Views.
    /// </summary>
    [XmlArrayItem("View", IsNullable=false)]
    public List<View> Views
    {
        get
        {
            return _views;
        }
        set
        {
            _views = value;
        }
    }
    
    /// <summary>
    /// The Categories structure contains zero or more Category
    /// elements. Each Category element represents what used to be referred to
    /// in CWE as a "Grouping" entry. That is, a category is now a collection of
    /// weaknesses based on a common attribute, such as CWE-310 Cryptographic
    /// Issues or CWE-355 User Interface Security Issues.
    /// </summary>
    [XmlArrayItem("Category", IsNullable=false)]
    public List<Category> Categories
    {
        get
        {
            return _categories;
        }
        set
        {
            _categories = value;
        }
    }
    
    /// <summary>
    /// The Weaknesses structure contains zero or more Weakness
    /// elements. Each Weakness element represents an actual weakness entry in
    /// CWE, such as CWE-311 Failure to Encrypt Sensitive Data or CWE-326 Weak
    /// Encryption.
    /// </summary>
    [XmlArrayItem("Weakness", IsNullable=false)]
    public List<Weakness> Weaknesses
    {
        get
        {
            return _weaknesses;
        }
        set
        {
            _weaknesses = value;
        }
    }
    
    /// <summary>
    /// The Compound_Elements structure contains zero or more
    /// Compound_Element elements. Each Compound_Element represents a meaningful
    /// aggregation of several weaknesses, as in a chain like CWE-690: CWE-252
    /// Unchecked Return Value can result in CWE-476 NULL Pointer Dereference or
    /// as in a composite like CWE-352 Cross-Site Request Forgery.
    /// </summary>
    [XmlArrayItem("Compound_Element", IsNullable=false)]
    public List<Compound_Element> Compound_Elements
    {
        get
        {
            return _compound_Elements;
        }
        set
        {
            _compound_Elements = value;
        }
    }
    
    /// <summary>
    /// Catalog_Name is a required attribute of Weakness_Catalog
    /// which identifies the collection of Weaknesses, Views, Categories and
    /// Compound_Elements represented by this XML document.
    /// </summary>
    [XmlAttribute]
    public string Catalog_Name
    {
        get
        {
            return _catalog_Name;
        }
        set
        {
            _catalog_Name = value;
        }
    }
    
    /// <summary>
    /// Catalog_Version is a required attribute of Weakness_Catalog
    /// which identifies what version of @Catalog_Name this XML document represents.
    /// </summary>
    [XmlAttribute]
    public string Catalog_Version
    {
        get
        {
            return _catalog_Version;
        }
        set
        {
            _catalog_Version = value;
        }
    }
    
    /// <summary>
    /// Catalog_Date is an optional attribute of Weakness_Catalog
    /// which identifies the date when this catalog was created or last updated.
    /// </summary>
    [XmlAttribute(DataType="date")]
    public DateTime Catalog_Date
    {
        get
        {
            return _catalog_Date;
        }
        set
        {
            _catalog_Date = value;
        }
    }
}
}
#pragma warning restore
