//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Tmt.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ThreatsManager.MsTmt.Model.AutoThreatGen {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITmtListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class TmtBaseListener : ITmtListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TmtParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParse([NotNull] TmtParser.ParseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TmtParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParse([NotNull] TmtParser.ParseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>subjectExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubjectExpression([NotNull] TmtParser.SubjectExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>subjectExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubjectExpression([NotNull] TmtParser.SubjectExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] TmtParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] TmtParser.NotExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExpression([NotNull] TmtParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExpression([NotNull] TmtParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>propertyExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyExpression([NotNull] TmtParser.PropertyExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>propertyExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyExpression([NotNull] TmtParser.PropertyExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>flowExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlowExpression([NotNull] TmtParser.FlowExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>flowExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlowExpression([NotNull] TmtParser.FlowExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parentExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParentExpression([NotNull] TmtParser.ParentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parentExpression</c>
	/// labeled alternative in <see cref="TmtParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParentExpression([NotNull] TmtParser.ParentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TmtParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] TmtParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TmtParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] TmtParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TmtParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean([NotNull] TmtParser.BooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TmtParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean([NotNull] TmtParser.BooleanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TmtParser.subjectproperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubjectproperty([NotNull] TmtParser.SubjectpropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TmtParser.subjectproperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubjectproperty([NotNull] TmtParser.SubjectpropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TmtParser.subject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubject([NotNull] TmtParser.SubjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TmtParser.subject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubject([NotNull] TmtParser.SubjectContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ThreatsManager.MsTmt.Model.AutoThreatGen
