// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.2.0.44
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Xml.Serialization;

#pragma warning disable
namespace ThreatsManager.Extensions.Panels.ThreatSources.Capec
{
    /// <summary>
/// The ObjectType is a complex type representing the characteristics of a specific cyber-relevant object (e.g. a file, a registry key or a process).
/// </summary>
[XmlInclude(typeof(AssociatedObjectType))]
[XmlInclude(typeof(RelatedObjectType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
[Serializable]
[DebuggerStepThrough]
[DesignerCategory("code")]
[XmlType(Namespace="http://cybox.mitre.org/cybox-2")]
public partial class ObjectType
{
    #region Private fields
    private ControlledVocabularyStringType _state;
    private StructuredTextType _description;
    private ObjectPropertiesType _properties;
    private DomainSpecificObjectPropertiesType _domain_Specific_Object_Properties;
    private LocationType _location;
    private List<RelatedObjectType> _related_Objects;
    private DefinedEffectType _defined_Effect;
    private MeasureSourceType _discovery_Method;
    private System.Xml.XmlQualifiedName _id;
    private System.Xml.XmlQualifiedName _idref;
    private bool _has_changed;
    #endregion
    
    /// <summary>
    /// ObjectType class constructor
    /// </summary>
    public ObjectType()
    {
        _discovery_Method = new MeasureSourceType();
        _related_Objects = new List<RelatedObjectType>();
        _location = new LocationType();
        _description = new StructuredTextType();
        _state = new ControlledVocabularyStringType();
    }
    
    /// <summary>
    /// The State field enables the description of the current state of the object, through a standardized controlled vocabulary.
    /// </summary>
    /// <summary>
    /// This field is implemented through the xsi:type controlled vocabulary extension mechanism. The default vocabulary type is ObjectStateVocab in the http://cybox.mitre.org/default_vocabularies-2 namespace. This type is defined in the cybox_default_vocabularies.xsd file or at the URL http://cybox.mitre.org/XMLSchema/default_vocabularies/2.0.1/cybox_default_vocabularies.xsd.
    /// </summary>
    /// <summary>
    /// Users may also define their own vocabulary using the type extension mechanism (by specifying a vocabulary name and/or reference using the vocab_name and vocab_reference attributes, respectively) or simply use this as a string field.
    /// </summary>
    public ControlledVocabularyStringType State
    {
        get => _state;
        set => _state = value;
    }
    
    /// <summary>
    /// The Description field provides a mechanism to specify a structured text description of this Object.
    /// </summary>
    public StructuredTextType Description
    {
        get => _description;
        set => _description = value;
    }
    
    /// <summary>
    /// The Properties construct is an abstract placeholder for various predefined Object type schemas (e.g. File, Process or System) that can be instantiated in its place through extension of the ObjectPropertiesType. This mechanism enables the specification of a broad range of Object types with consistent Object Property naming and structure. The set of Properties schemas are maintained independent of the core CybOX schema.
    /// </summary>
    public ObjectPropertiesType Properties
    {
        get => _properties;
        set => _properties = value;
    }
    
    /// <summary>
    /// The Domain_Specific_Object_Properties construct is of an Abstract type placeholder within the CybOX schema enabling the inclusion of domain-specific metadata for an object through the use of a custom type defined as an extension of this base Abstract type. This enables domains utilizing CybOX such as malware analysis or forensics to incorporate non-generalized object metadata from their domains into CybOX objects.
    /// </summary>
    public DomainSpecificObjectPropertiesType Domain_Specific_Object_Properties
    {
        get => _domain_Specific_Object_Properties;
        set => _domain_Specific_Object_Properties = value;
    }
    
    /// <summary>
    /// The Location field specifies a relevant physical location.
    /// </summary>
    /// <summary>
    /// This field is implemented through the xsi:type extension mechanism. The default type is CIQAddressInstanceType in the http://cybox.mitre.org/extensions/Identity#CIQAddress-1 namespace. This type is defined in the extensions/location/ciq_address_3.0.xsd file or at the URL http://cybox.mitre.org/XMLSchema/extensions/location/ciq_address/1.0/ciq_address_3.0.xsd.
    /// </summary>
    /// <summary>
    /// Those who wish to express a simple name may also do so by not specifying an xsi:type and using the Name field.
    /// </summary>
    public LocationType Location
    {
        get => _location;
        set => _location = value;
    }
    
    /// <summary>
    /// The Related_Objects construct is optional and enables the identification and/or specification of Objects with relevant relationships with this Object.
    /// </summary>
    [XmlArrayItem("Related_Object", IsNullable=false)]
    public List<RelatedObjectType> Related_Objects
    {
        get => _related_Objects;
        set => _related_Objects = value;
    }
    
    /// <summary>
    /// The Defined_Effect construct is an abstract placeholder for various predefined Object Effect types (e.g. DataReadEffect, ValuesEnumeratedEffect or StateChangeEffect) that can be instantiated in its place through extension of the DefinedEffectType. This mechanism enables the specification of a broad range of types of potential complex action effects on Objects. The set of Defined_Effect types (extending the DefinedEffectType) are maintained as part of the core CybOX schema.
    /// </summary>
    public DefinedEffectType Defined_Effect
    {
        get => _defined_Effect;
        set => _defined_Effect = value;
    }
    
    /// <summary>
    /// The Discovery_Method field is optional and enables descriptive specification of how this Object was observed (in the case of a Cyber Observable Object instance) or could potentially be observed (in the case of a Cyber Observable Object pattern).
    /// </summary>
    public MeasureSourceType Discovery_Method
    {
        get => _discovery_Method;
        set => _discovery_Method = value;
    }
    
    /// <summary>
    /// The id field specifies a unique id for this Object.
    /// </summary>
    [XmlAttribute]
    public System.Xml.XmlQualifiedName id
    {
        get => _id;
        set => _id = value;
    }
    
    /// <summary>
    /// The idref field specifies a unique id reference to an Object defined elsewhere.
    /// </summary>
    /// <summary>
    /// When idref is specified, the id attribute must not be specified, and any instance of this Object should not hold content unless an extension of the Object allows it.
    /// </summary>
    [XmlAttribute]
    public System.Xml.XmlQualifiedName idref
    {
        get => _idref;
        set => _idref = value;
    }
    
    /// <summary>
    /// The has_changed field is optional and conveys a targeted observation pattern of whether the associated object specified has changed in some way without requiring further specific detail. This field would be leveraged within a pattern observable triggering on whether the value of an object specification has changed at all. This field is NOT intended to be used for versioning of CybOX content.
    /// </summary>
    [XmlAttribute]
    public bool has_changed
    {
        get => _has_changed;
        set => _has_changed = value;
    }
}
}
#pragma warning restore
