using System;
using ThreatsManager.Interfaces.ObjectModel.Properties;

namespace ThreatsManager.Interfaces.ObjectModel.ThreatsMitigations
{
    /// <summary>
    /// Interface implemented by Vulnerabilities, that is Weaknesses that are associated to Entities or Data Flows.
    /// </summary>
    public interface IVulnerability : IIdentity, IThreatModelChild, IPropertiesContainer, IVulnerabilityMitigationsContainer
    {
        /// <summary>
        /// Identifier of the Parent Identity.
        /// </summary>
        /// <remarks>The Parent Identity is the Entity (External Interactor, Process or Data Store) or Data Flow to which the Vulnerability is associated.</remarks>
        Guid ParentId { get; }

        /// <summary>
        /// Parent Identity.
        /// </summary>
        /// <remarks>The Parent Identity is the Entity (External Interactor, Process or Data Store) or Data Flow to which the Vulnerability is associated.</remarks>
        IIdentity Parent { get; }

        /// <summary>
        /// Identifier of the Severity.
        /// </summary>
        int SeverityId { get; }

        /// <summary>
        /// Severity of the Vulnerability.
        /// </summary>
        ISeverity Severity { get; set; }

        /// <summary>
        /// Identifier of the Weakness from which the Vulnerability is derived.
        /// </summary>
        Guid WeaknessId { get; }

        /// <summary>
        /// Weakness from which the Vulnerability is derived.
        /// </summary>
        IWeakness Weakness { get; }
        
        /// <summary>
        /// Get the Mitigation Level for the Vulnerability.
        /// </summary>
        /// <returns>Mitigation Level, which is obtaining by adding the Strength of all the applied Mitigations and by comparing it to 100, which represents the full mitigation.</returns>
        MitigationLevel GetMitigationLevel();

        /// <summary>
        /// Creates a duplicate of the current Vulnerability and attaches it to the Container passed as argument.
        /// </summary>
        /// <param name="container">Destination container.</param>
        /// <returns>Freshly created Vulnerability.</returns>
        IVulnerability Clone(IVulnerabilitiesContainer container);
    }
}